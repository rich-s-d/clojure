{"version":3,"sources":["calculator/app.cljs"],"mappings":"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","names":["calculator.app/current-value","reagent.core.atom","calculator.app/zero-atom","calculator.app/xy-atom","cljs.core.atom","calculator.app/get-value","event","cljs.core/deref","cljs.core.print","js/console.log","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/+","cljs.core/reset!","calculator.app/clear-display","calculator.app/calculate","cljs.core/assoc-in","calculator.app/result","js/eval","calculator.app/mini-app","calculator.app/run","reagent.dom.render","js/document.getElementById","calculator.app/reload","js/console"],"sourcesContent":["(ns calculator.app\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rdom]))\n\n(def current-value (r/atom 0))\n(def zero-atom (r/atom \"\"))\n(def xy-atom (atom {:x 0 :y \"\" :z \"\" :sym \"\"}))\n\n(defn get-value [event]\n      (print @xy-atom)\n      (js/console.log event)\n      ;(reset! current-value event)\n      ;(swap! xy-atom update-in [:x] + event )\n      (swap! xy-atom update-in [:y] + event)\n      (reset! current-value (:y @xy-atom))\n      (print @xy-atom))\n\n(defn clear-display []\n      (reset! current-value \"\")\n      (reset! xy-atom {:x 0 :y \"\" :z \"\" :sym \"\"})\n      )\n\n(defn calculate [event]\n      ;calculate result for every computing\n      ;(@y @sym )\n      (do\n        (print @xy-atom)\n        (swap! xy-atom update-in [:sym] + event )\n        (swap! xy-atom update-in [:z] + (:y @xy-atom))\n        (swap! xy-atom assoc-in [:y] \"\")\n        (print @xy-atom)\n        )\n      )\n\n(defn result []\n      (print @xy-atom)\n      (reset! current-value (js/eval (str(:z @xy-atom)\n                                         (:sym @xy-atom)\n                                         (:y @xy-atom)\n                                         )))\n      (print @xy-atom)\n      )\n\n(defn mini-app []\n      [:table {:border \"1\"}\n       [:tbody\n        [:tr\n         [:td {:colspan \"3\"} [:input#result {:readonly \"\" :type \"text\" :value  @current-value  }]]\n         [:td [:input {:type \"button\" :value \"c\" :on-click #(clear-display)} ]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"1\" :on-click #(get-value 1)  }]]\n         [:td [:input {:type \"button\" :value \"2\" :on-click #(get-value 2) }]]\n         [:td [:input {:type \"button\" :value \"3\" :on-click #(get-value 3)}]]\n         [:td [:input {:type \"button\" :value \"/\" :on-click #(calculate \"/\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"4\" :on-click #(get-value 4)}]]\n         [:td [:input {:type \"button\" :value \"5\" :on-click #(get-value 5)}]]\n         [:td [:input {:type \"button\" :value \"6\" :on-click #(get-value 6)}]]\n         [:td [:input {:type \"button\" :value \"-\" :on-click #(calculate \"-\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"7\" :on-click #(get-value 7)}]]\n         [:td [:input {:type \"button\" :value \"8\" :on-click #(get-value 8)}]]\n         [:td [:input {:type \"button\" :value \"9\" :on-click #(get-value 9)}]]\n         [:td [:input {:type \"button\" :value \"+\" :on-click #(calculate \"+\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \".\" :on-click #(get-value \".\")}]]\n         [:td [:input {:type \"button\" :value \"0\" :on-click #(get-value 0)}]]\n         [:td [:input {:type \"button\" :value \"=\" :on-click #(result)}]]\n         [:td [:input {:type \"button\" :value \"*\" :on-click #(calculate \"*\")}]]]]])\n\n(defn ^:export run []\n      (rdom/render [mini-app] (js/document.getElementById \"app\")))\n(defn ^:export reload []\n      (.log js/console \"reload...\")\n      (run))\n"]}