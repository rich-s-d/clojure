{"version":3,"sources":["calculator/app.cljs"],"mappings":"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","names":["calculator.app/current-value","reagent.core.atom","calculator.app/zero-atom","calculator.app/xy-atom","cljs.core.atom","calculator.app/mem-atom","calculator.app/valuta-atom","calculator.app/get-value","event","cljs.core/deref","cljs.core.print","js/console.log","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/+","cljs.core/reset!","calculator.app/clear-display","calculator.app/calculate","cljs.core._EQ_","cljs.core/assoc-in","calculator.app/result","js/eval","calculator.app/add-to-memory","n","calculator.app/mem-recall","calculator.app/mem-reset","calculator.app/pi","js/Math","calculator.app/x-squared","calculator.app/valuta","calculator.app/v","cljs.core.get","calculator.app/mini-app","calculator.app/run","reagent.dom.render","js/document.getElementById","calculator.app/reload","js/console"],"sourcesContent":["(ns calculator.app\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rdom]))\n\n(def current-value (r/atom 0))\n(def zero-atom (r/atom \"\"))\n(def xy-atom (atom {:x 0 :y \"\" :z \"\" :sym \"\"}))\n(def mem-atom (r/atom 0))\n(def valuta-atom (r/atom \"\"))\n\n\n(defn get-value [event]\n      (print @xy-atom)\n      (js/console.log event)\n      ;(reset! current-value event)\n      ;(swap! xy-atom update-in [:x] + event )\n      (swap! xy-atom update-in [:y] + event)\n      (reset! current-value (:y @xy-atom))\n      (print @xy-atom))\n\n\n(defn clear-display []\n      (reset! current-value 0)\n      (reset! xy-atom {:x 0 :y \"\" :z \"\" :sym \"\"})\n      )\n\n(defn calculate [event]\n      ;calculate result for every computing\n      ;(@y @sym )\n      (do\n        (print @xy-atom)\n        (swap! xy-atom update-in [:sym] + event )\n        (if (= (:z @xy-atom) \"\") (swap! xy-atom update-in [:z] + (:y @xy-atom)))\n        (swap! xy-atom assoc-in [:y] \"\")\n        (print @xy-atom)\n        )\n      )\n\n(defn result []\n      (print @xy-atom)\n      (reset! current-value (js/eval (str(:z @xy-atom)\n                                         (:sym @xy-atom)\n                                         (:y @xy-atom)\n                                         )))\n      (reset! xy-atom {:y \"\" :z @current-value :sym \"\"})\n      ;(swap! xy-atom update-in [:z] + @current-value)\n      (print @xy-atom)\n      )\n\n(defn add-to-memory []\n      (print @mem-atom)\n      (print @xy-atom)\n      ;(reset! current-value (:y @xy-atom))\n      (swap! mem-atom (fn [n] (+ n (js/eval @current-value))))\n\n      ;(swap! my-atom (fn [n] (* (+ n n) 2)))\n      (print @mem-atom)\n      (print @xy-atom))\n\n(defn mem-recall []\n      (print @mem-atom)\n      (print @xy-atom)\n      (swap! xy-atom assoc-in [:y] @mem-atom)\n      (reset! current-value @mem-atom)\n      (print @mem-atom)\n      (print @xy-atom)\n      )\n\n(defn mem-reset []\n      (print @mem-atom)\n      (reset! mem-atom 0))\n      (print @mem-atom)\n\n(defn pi []\n      (print @xy-atom)\n      (reset! current-value (.-PI js/Math))                               ;\n      (swap! xy-atom assoc-in [:y] @current-value)\n      (print @xy-atom)\n      )\n\n(defn x-squared []\n      (print @xy-atom)\n      (reset! current-value (* @current-value @current-value))\n      (swap! xy-atom assoc-in [:y] @current-value)\n      (print @xy-atom)\n      )\n\n(defn valuta [event]\n      (print @xy-atom)\n      (def v {\"\u00a3\" 0.1154,  \"US$\" 0.1603, \"\u20ac\" 0.1344})\n      (print event, v)\n      (reset! current-value (* (js/eval (:y @xy-atom)) (get v event)))\n      (reset! valuta-atom event)\n      (print @xy-atom)\n      )\n\n(defn mini-app []\n      [:table  {:border \"1\"}                                ;{:style \"width:100%\"}\n       [:tbody\n        [:tr\n         [:td {:colspan \"2\"} [:input#result {:readonly \"\" :type \"text\" :value  @current-value }]]\n         [:td {:colspan \"1\"} [:input#result {:readonly \"\" :type \"text\" :value  @valuta-atom }]]\n         [:td {:colspan \"1\"} [:input {:type \"button\" :value \"c\" :on-click #(clear-display)} ]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"1\" :on-click #(get-value 1)  }]]\n         [:td [:input {:type \"button\" :value \"2\" :on-click #(get-value 2) }]]\n         [:td [:input {:type \"button\" :value \"3\" :on-click #(get-value 3)}]]\n         [:td [:input {:type \"button\" :value \"/\" :on-click #(calculate \"/\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"4\" :on-click #(get-value 4)}]]\n         [:td [:input {:type \"button\" :value \"5\" :on-click #(get-value 5)}]]\n         [:td [:input {:type \"button\" :value \"6\" :on-click #(get-value 6)}]]\n         [:td [:input {:type \"button\" :value \"-\" :on-click #(calculate \"-\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"7\" :on-click #(get-value 7)}]]\n         [:td [:input {:type \"button\" :value \"8\" :on-click #(get-value 8)}]]\n         [:td [:input {:type \"button\" :value \"9\" :on-click #(get-value 9)}]]\n         [:td [:input {:type \"button\" :value \"+\" :on-click #(calculate \"+\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \".\" :on-click #(get-value \".\")}]]\n         [:td [:input {:type \"button\" :value \"0\" :on-click #(get-value 0)}]]\n         [:td [:input {:type \"button\" :value \"=\" :on-click #(result)}]]\n         [:td [:input {:type \"button\" :value \"*\" :on-click #(calculate \"*\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"\u03c0\" :on-click #(pi)}]]\n         [:td [:input {:type \"button\" :value \"MemRs.\" :on-click #(mem-reset)}]]\n         [:td [:input {:type \"button\" :value \"MemRc.\" :on-click #(mem-recall)}]]\n         [:td [:input {:type \"button\" :value \"Mem+\" :on-click #(add-to-memory)}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"x\u00b2\" :on-click #(x-squared)}]]\n         [:td [:input {:type \"button\" :value \"\u00a3\" :on-click #(valuta \"\u00a3\")}]]\n         [:td [:input {:type \"button\" :value \"US$\" :on-click #(valuta \"US$\")}]]\n         [:td [:input {:type \"button\" :value \"\u20ac\" :on-click #(valuta \"\u20ac\")}]]]]])\n\n(defn ^:export run []\n      (rdom/render [mini-app] (js/document.getElementById \"app\")))\n(defn ^:export reload []\n      (.log js/console \"reload...\")\n      (run))\n"]}